{"version":3,"sources":["logic-functions/index.js","components/lettersTable/index.js","components/score/index.js","components/radioButton/index.js","components/radioButtons/index.js","pages/home/index.js","App.js","index.js"],"names":["letters","split","makeNumbersArray","numbersArray","i","push","letter","number","makeLettersMap","mappedLetters","map","status","choseRandomNumber","array","min","max","newArray","JSON","parse","stringify","randomNumber","splice","length","Math","floor","random","LettersTable","props","isGameInProgress","table","Object","keys","key","className","defaultProps","Score","hit","miss","left","RadioButton","id","label","onChange","isSelected","disabled","value","type","checked","htmlFor","RadioButtons","difficulty","difficultyMap","easy","medium","hard","Home","useState","countNumber","setCountNumber","gameInProgress","setGameInProgress","pressedLetter","setPressedLetter","setDifficulty","setNumbersArray","setMappedLetters","setRandomNumber","timer","useRef","timerOn","useEffect","newNumbersArray","current","newMappedLetters","startTimer","stopGame","clearTimeout","randomResult","setTimeout","alert","tabIndex","onKeyPress","e","toLowerCase","isHit","currentTarget","onClick","readOnly","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84a4359d.chunk.js","sourcesContent":["export const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const letters = 'abcdefghijklmnopqrstuvwxyz'.split('');\n\nexport const makeNumbersArray = () => {\n  const numbersArray = [];\n  for (let i = 0; i < 26; i++) {\n    numbersArray.push({ letter: letters[i], number: i + 1 });\n  }\n  return numbersArray;\n};\n\nexport const makeLettersMap = numbersArray => {\n  const mappedLetters = {};\n  numbersArray.map(number => {\n    mappedLetters[number.letter] = {\n      number: number.number,\n      letter: number.letter,\n      status: 'none',\n    };\n  });\n  return mappedLetters;\n};\n\nexport const choseRandomNumber = array => {\n  let newArray = JSON.parse(JSON.stringify(array));\n  const randomNumber = newArray.splice(random(0, newArray.length - 1), 1)[0];\n\n  return { randomNumber, newArray };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './letters-table.scss';\n\nconst LettersTable = props => {\n  const { mappedLetters, isGameInProgress } = props;\n\n  const table = Object.keys(mappedLetters).map(key => {\n    return (\n      <div\n        className={`lt-letters__letter lt-letters__letter--${mappedLetters[key].status}`}\n        key={key}\n      >\n        <span>\n          {mappedLetters[key].letter} ({mappedLetters[key].number})\n        </span>\n      </div>\n    );\n  });\n\n  return (\n    <div className={`lt-letters ${isGameInProgress && 'lt-letters--active'}`}>\n      {table}\n    </div>\n  );\n};\n\nLettersTable.propTypes = {\n  mappedLetters: PropTypes.object.isRequired,\n  isGameInProgress: PropTypes.bool\n};\n\nLettersTable.defaultProps = {\n  isGameInProgress: false,\n};\n\nexport default LettersTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './score.scss';\n\nconst Score = props => {\n  const { mappedLetters } = props;\n\n  let hit = 0;\n  let miss = 0;\n  let left = 0;\n\n  Object.keys(mappedLetters).map(key => {\n    if (mappedLetters[key].status === 'hit') {\n      ++hit;\n    } else if (mappedLetters[key].status === 'miss') {\n      ++miss;\n    } else if (mappedLetters[key].status === 'none') {\n      ++left;\n    }\n  });\n\n  return (\n    <div className=\"lt-score\">\n      <h2>Score:</h2>\n      <div className=\"lt-score__hit\">Hit: {hit}</div>\n      <div className=\"lt-score__miss\">Miss: {miss}</div>\n      <div className=\"lt-score__left\">Left: {left}</div>\n    </div>\n  );\n};\n\nScore.propTypes = {\n  mappedLetters: PropTypes.object.isRequired,\n};\n\nScore.defaultProps = {};\n\nexport default Score;\n","import React from 'react';\nimport './radio-button.scss';\n\nconst RadioButton = props => {\n    const {id, label, onChange, isSelected, disabled, value} = props;\n\n  return (\n    <div className={`lt-radio-button ${disabled && 'lt-radio-button--disabled'}`}>\n      <input\n        id={id}\n        onChange={onChange}\n        value={value}\n        type=\"radio\"\n        checked={isSelected}\n        disabled={disabled}\n      />\n      <label htmlFor={id}>{label}</label>\n    </div>\n  );\n};\n\nexport default RadioButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './radio-buttons.scss';\nimport RadioButton from '../radioButton';\n\nconst RadioButtons = props => {\n  const { onChange, difficulty, disabled } = props;\n\n  return (\n    <form className=\"lt-radio-buttons\">\n      <RadioButton\n        onChange={onChange}\n        id=\"1\"\n        isSelected={difficulty === 'easy'}\n        label=\"easy\"\n        value=\"easy\"\n        disabled={disabled}\n      />\n      <RadioButton\n        onChange={onChange}\n        id=\"2\"\n        isSelected={difficulty === 'medium'}\n        label=\"medium\"\n        value=\"medium\"\n        disabled={disabled}\n      />\n      <RadioButton\n        onChange={onChange}\n        id=\"3\"\n        isSelected={difficulty === 'hard'}\n        label=\"hard\"\n        value=\"hard\"\n        disabled={disabled}\n      />\n    </form>\n  );\n};\n\nRadioButtons.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nRadioButtons.defaultProps = {\n  disabled: true,\n};\n\nexport default RadioButtons;\n","import React, { useState, useEffect, useRef } from 'react';\nimport './home.scss';\nimport {\n  makeLettersMap,\n  makeNumbersArray,\n  choseRandomNumber,\n} from '../../logic-functions';\nimport LettersTable from '../../components/lettersTable';\nimport Score from '../../components/score';\nimport RadioButtons from '../../components/radioButtons';\n\nconst difficultyMap = {\n  easy: 5000,\n  medium: 3500,\n  hard: 2000,\n};\n\nconst Home = props => {\n  const [countNumber, setCountNumber] = useState(0);\n  const [gameInProgress, setGameInProgress] = useState(false);\n  const [pressedLetter, setPressedLetter] = useState('');\n  const [difficulty, setDifficulty] = useState('medium');\n  const [numbersArray, setNumbersArray] = useState([]);\n  const [mappedLetters, setMappedLetters] = useState({});\n  const [randomNumber, setRandomNumber] = useState(null);\n\n  const timer = useRef(null);\n  const timerOn = useRef(false);\n\n  useEffect(() => {\n    const newNumbersArray = makeNumbersArray();\n    setNumbersArray(newNumbersArray);\n    setMappedLetters(makeLettersMap(newNumbersArray));\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (gameInProgress && !timerOn.current) {\n      const newMappedLetters = JSON.parse(JSON.stringify(mappedLetters));\n      newMappedLetters[randomNumber.letter].status = 'miss';\n      setMappedLetters(newMappedLetters);\n    }\n\n    if (gameInProgress) {\n      startTimer();\n    }\n    // eslint-disable-next-line\n  }, [countNumber]);\n\n  const handleRadioChange = e => {\n    setDifficulty(e.currentTarget.value);\n  };\n\n  const stopGame = () => {\n    setGameInProgress(false);\n    clearTimeout(timer.current);\n    setNumbersArray(makeNumbersArray());\n    setCountNumber(0);\n  };\n\n  const handleKeyPress = e => {\n    if (!gameInProgress) {\n      return;\n    }\n    const key = e.key.toLowerCase();\n    const newMappedLetters = JSON.parse(JSON.stringify(mappedLetters));\n    let isHit = 'miss';\n    setPressedLetter(key);\n\n    if (key === randomNumber.letter) {\n      isHit = 'hit';\n    }\n\n    newMappedLetters[randomNumber.letter].status = isHit;\n\n    setMappedLetters(newMappedLetters);\n\n    clearTimeout(timer.current);\n    setCountNumber(countNumber + 1);\n    setTimeout(() => {\n      setPressedLetter('');\n    }, 200);\n  };\n\n  const startTimer = () => {\n    timerOn.current = true;\n    if (numbersArray.length > 0) {\n      const randomResult = choseRandomNumber(numbersArray);\n      setRandomNumber(randomResult.randomNumber);\n      setNumbersArray(randomResult.newArray);\n\n      timer.current = setTimeout(() => {\n        timerOn.current = false;\n        setCountNumber(countNumber + 1);\n      }, difficultyMap[difficulty]);\n    } else {\n      setGameInProgress(false);\n      setTimeout(() => {\n        alert('Game Over');\n        stopGame();\n      }, 10);\n    }\n  };\n\n  const handleButtonClick = () => {\n    if (!gameInProgress) {\n      setPressedLetter('');\n      setCountNumber(0);\n      setGameInProgress(true);\n      setMappedLetters(makeLettersMap(numbersArray));\n      startTimer();\n    }\n\n    if (gameInProgress) {\n      stopGame();\n    }\n  };\n\n  return (\n    <div className=\"lt-home\" tabIndex={0} onKeyPress={handleKeyPress}>\n      <div className=\"lt-home__container\">\n        <h1 className=\"lt-home__title\">ALPHABET REFLEX GAME</h1>\n        <RadioButtons\n          difficulty={difficulty}\n          onChange={handleRadioChange}\n          disabled={gameInProgress}\n        />\n        <div className=\"lt-home__score\">\n          <Score mappedLetters={mappedLetters} />\n        </div>\n        <div className=\"lt-home__mid-wrapper\">\n          <button className=\"lt-home__start-btn\" onClick={handleButtonClick}>\n            {gameInProgress ? 'Stop' : 'Start Game'}\n          </button>\n          <div className=\"lt-home__number\">\n            {randomNumber && randomNumber.number}\n          </div>\n          <input readOnly value={pressedLetter} placeholder=\"Input letter\" />\n        </div>\n        <LettersTable mappedLetters={mappedLetters} isGameInProgress={gameInProgress} />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport Home from './pages/home';\nimport './app.scss'\n\nconst App = () => {\n  return (\n      <Home />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}